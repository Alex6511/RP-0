CONTRACT_TYPE
{
    name = recordCrewedDuration
	group = HumanRecords
	
    title = Crewed Duration Record of @crewedTargetDuration
    description = We want you to set a new space duration record! Keep your crew in space for at least @crewedTargetDuration and return home safely.
    synopsis = Set a crewed duration record of @crewedTargetDuration
    completedMessage = Congratulations! You've set a new crewed duration record!
	
	agent = Federation Aeronautique Internationale

    autoAccept = true
	cancellable = false
	declinable = false
	
	prestige = Trivial

    // Can only have one active
    maxSimultaneous = 1

    // Contract rewards
    rewardFunds = 20000.0 + @crewedTargetDuration * 20000
	rewardReputation = 30.0 + @crewedTargetDuration * 2

    // Ultra high weight makes sure that these get auto-generated
    weight = 1000.0

    DATA
    {
        type = List<int>

        crewedDurations = [ 1, 2, 3, 7, 14, 30, 60, 90, 180, 365 ]
    }

    // Break this into two steps to work around ContractConfigurator#260
    DATA
    {
        type = int

        crewedDurationIndex = RP0_CrewedDurationIndex
    }

    DATA
    {
        type = Duration

        crewedTargetDuration = @crewedDurations.ElementAt(@crewedDurationIndex) * 86400
    }
	PARAMETER
	{
		name = durationInSpace
		type = All
		title = Stay in space for @/crewedTargetDuration
		
		PARAMETER
		{
			name = InSpace
			type = Any
			title = Be in Space
			hideChildren = true
			
			PARAMETER
			{
				name = ReachState
				type = ReachState
				situation = ORBITING
			}
			PARAMETER
			{
				name = ReachState
				type = ReachState
				situation = SUB_ORBITAL
			}
			PARAMETER
			{
				name = ReachState
				type = ReachState
				situation = ESCAPING
			}
		}
		PARAMETER
		{
			name = Duration
			type = Duration
			duration = @/crewedTargetDuration
		}
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = 1
		}
	}

    BEHAVIOUR
    {
        name = IncrementIndex
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            RP0_CrewedDurationIndex = RP0_CrewedDurationIndex + 1
        }
    }

    REQUIREMENT
    {
        type = Expression

        expression = @/crewedDurationIndex < @/crewedDurations.Count()
    }
}