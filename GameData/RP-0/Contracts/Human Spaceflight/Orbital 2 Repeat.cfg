////////////////////////////
CONTRACT_TYPE
{
	name = HSFOrbitalLEO2Repeatable
	group = HumanContracts
	
	title = Human Orbital (2/LEO)
	
	description = Launch a crewed spacecraft capable of supporting at least two people into orbit for a routine mission (must orbit for @/DurationText days) and return safely home.

	synopsis = Fly a two-person LEO Orbital mission.
	
	completedMessage = Crew alive and well after the mission--congratulations!
	
	cancellable = true
	declinable = true
	deadline = 720 // 6 months *4
	
	prestige = Trivial
	
	targetBody = HomeWorld()
	
	maxSimultaneous = 1
	
	// reward block
	advanceFunds = 40000 * (1 + (4 * @DurationText / 100))
	rewardReputation = 40.0 * (1 + (4 * @DurationText / 100))
	rewardFunds = 40000 * (1 + (4 * @DurationText / 100))
	failureReputation = 400.0 * (1 + (4 * @DurationText / 100))
	failureFunds = 60000 * (1 + (4 * @DurationText / 100))

	
	REQUIREMENT
	{
		name = ReqCapsules
		type = TechResearched
		tech = simpleCommandModules
	}
	REQUIREMENT
	{
		name = CompleteContractHSFOrbit
		type = CompleteContract
		contractType = HSFOrbitalLEO1Repeatable
	}
	REQUIREMENT
	{
		name = CompleteContractHSFOrbit
		type = CompleteContract
		contractType = HSFOrbitalLEO3Repeatable
		invertRequirement = true
	}
	DATA
	{
		type = Duration
		unrounded = Random(1d, 4d)
		precision = 1d
	}
	DATA
	{
		type = double
		roundedDouble = Round(@unrounded, @precision)
	}
	DATA
	{
		type = Duration
		rounded = @roundedDouble
	}
	DATA
	{
		type = Duration
		unrounded2 = Random(3d, 10d)
		precision2 = 1d
	}
	DATA
	{
		type = double
		roundedDouble2 = Round(@unrounded2, @precision2)
	}
	DATA
	{
		type = Duration
		rounded2 = @roundedDouble2
	}
	DATA
	{
		type = int
		startOrbit = 400000 + Round(Random(-100000, 400000), 1000)
	}
	DATA
	{
		type = int
		DurationText = (@roundedDouble + @roundedDouble2) / 86400
	}
	PARAMETER
	{
		name = VesselGroup
		type = VesselParameterGroup
		title = Crewed Orbital
		define = orbitalCrewedSpacecraft
	
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = 2
		}
		PARAMETER
		{
			name = Orbit
			type = Orbit
			minPeA = 150000
			minApA = @/startOrbit
			maxApA = @minApA + 200000
			targetBody = HomeWorld()
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = Duration
			type = Duration
			duration =  @/rounded
			preWaitText = Reach specified orbit.
			waitingText = Orbiting...
			completionText = Orbits completed, you may alter your orbit now.
		}
		PARAMETER
		{
			name = Orbit2
			type = Orbit
			minPeA = 150000
			minApA = @/startOrbit + Round(Random(500000, 1200000), 1000)
			maxApA = @minApA + 200000
			targetBody = HomeWorld()
			disableOnStateChange = true
		}
		PARAMETER
		{
			name = Duration2
			type = Duration
			duration =  @/rounded2
			preWaitText = Reach specified orbit.
			waitingText = Orbiting...
			completionText = Orbits completed, you may fire retros when ready.
		}

		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			completeInSequence = true
		}
	}
}
