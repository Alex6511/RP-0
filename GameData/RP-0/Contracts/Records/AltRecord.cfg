CONTRACT_TYPE
{
    name = recordUncrewedAlt
	group = Records
	
    title = Sounding Altitude Record of @uncrewedTargetAltitude.Print()/1000 km.
    description = We want you to set a new sounding rocket altitude record! Reach @uncrewedTargetAltitude.Print()/1000 km.
    synopsis = Set an uncrewed altitude record of @uncrewedTargetAltitude.Print()/1000 km.
    completedMessage = Congratulations! You've set a new uncrewed altitude record!
	
	agent = Kerbin World-Firsts Record-Keeping Society

    autoAccept = true
	cancellable = false
	declinable = false

    prestige = Trivial

    targetBody = HomeWorld()

    // Can only have one active
    maxSimultaneous = 1

    // Contract rewards
    rewardFunds = Pow(@targetAltitude, 0.5) + 500
	rewardReputation = Pow(@targetAltitude, 0.5) * 0.005 + 2.5

    // Ultra high weight makes sure that these get auto-generated
    weight = 1000.0

    DATA
    {
        type = List<int>

        altitudes = [ 10000, 20000, 30000, 40000, 50000, 60000, 80000, 100000, 120000, 140000, 160000, 180000, 200000, 300000, 400000, 500000, 600000, 700000, 800000, 900000, 1000000, 1000000, 2000000, 3000000, 4000000, 5000000, 6000000, 7000000, 8000000, 9000000, 10000000 ]
    }

    // Break this into two steps to work around ContractConfigurator#260
    DATA
    {
        type = float

        index = RP0_SoundingAltitudeIndex
    }

    DATA
    {
        type = int

        uncrewedTargetAltitude = @altitudes.ElementAt(@index)
    }

    PARAMETER
    {
        name = ReachState
        type = ReachState

        minAltitude = @/uncrewedTargetAltitude
    }

    BEHAVIOUR
    {
        name = IncrementIndex
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            RP0_SoundingAltitudeIndex = RP0_SoundingAltitudeIndex + 1
        }
    }

    REQUIREMENT
    {
        type = Expression

        expression = @/index < @/altitudes.Count()
    }
}